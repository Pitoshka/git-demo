public static void Main()
{
    double pi = Math.PI;
    int tenThousand = 10000L;
    float tenThousandPi = pi*tenThousand;
    int roundedTenThousandPi = tenThousandPi;
    int integerPartOfTenThousandPi = tenThousandPi;
    Console.WriteLine(integerPartOfTenThousandPi);
    Console.WriteLine(roundedTenThousandPi);
} 

CallStack - окно помощи при ошибках
ctrl + alt + q - помощь просмотра переменной

отладка
f10 and f11 
F2- правильный рефакторинг нескольких слов


17.02.2021 - Collection

List<int> list = new List<int>();

	list.Add(0);
	list.Add(2);
	list.Add(3);
	list.Insert(1, 1);
	list.RemoveAt(0);

	foreach (var e in list)
		Console.WriteLine(e);



//StringBuilder - это класс, представляющий собой изменяемую строку
    var builder = new StringBuilder();



//Или использовать особую строку, в которой спецсимволы не допускаются
			Console.WriteLine(@"C:\Users\admin");

//Используйте форматированный вывод
	Console.WriteLine("{0} {1}", a, b); // 13 14,3456789

value type and reference type


param - find more information about that

пометка для модульного тестирования: в случаеветвений нашей программы стави точки остановки на каждый блок
в ветвях. запускаем тест и шагаем отладчиком, при сохранении точки остановк в конкретной ветви делаем вывод что тест
не тронул данную ветвь и нужно написать дополнительный юнит тест


!!!рецептурное знание





Задача

Задача — это соответствие, определяющее зависимость выхода (слова) от входа (слова).

Σ\SigmaΣ — алфавит (произвольное конечное множество, элементы которого интерпретируются как символы)

Σ∗\Sigma^*Σ∗ — множество всех слов из букв алфавита Σ\SigmaΣ.

ρ⊂Σ∗×Σ∗\rho\subset\Sigma^*\times\Sigma^*ρ⊂Σ∗×Σ∗ — бинарное отношение, определяющее задачу. Пара (x,y)∈ρ(x,y)\in\rho(x,y)∈ρ показывает, что yyy является допустимым выходом для входа xxx.
Алгоритм

Алгоритм — это последовательность элементарных операций, обрабатывающая входную строку xxx для получения выходной строки yyy такой, что (x,y)∈ρ(x,y)\in\rho(x,y)∈ρ

Под элементарной операцией в этом курсе мы будем понимать операции, исполняющиеся непосредственно на процессоре: сложение чисел, умножение и т.д.

Программа — это алгоритм, выраженный на некотором языке, который может быть транслирован в элементарные операции
Сложность алгоритма

Временная сложность алгоритма — это функция f(n)f(n)f(n), f:N→Nf:N\rightarrow Nf:N→N, показывающая точную верхнюю границу количества элементарных операций, необходимых для завершения работы алгоритма, в зависимости от количества символов во входе

Емкостная сложность алгоритма — аналогичная оценка для дополнительной памяти, необходимой для анализа входа. Память, использующаяся для хранения входа, не учитывается.


